.header {
  height: 10vh;
  
}

.headerLogoMinds {
  border-bottom-right-radius: 15px;
  border-top-right-radius: 15px;
  border-left: 0px none;
  padding-right: .7rem;
}

.headerLogo {
  display: flex;
  animation: text-focus-in 1s ease-in both;
}

@keyframes text-focus-in {
  0% {
    filter: blur(12px);
    opacity: 0;
  }
  100% {
    filter: blur(0px);
    opacity: 1;
  }
}

.home {
  min-height: 100vh;
  overflow: auto; 
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}

.writings {
  min-height: 90vh;
  overflow: auto; 
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  animation: text-focus-in 1s ease-in both;
}

.writingDetails {
  font-family:  'Open Sans', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  font-size: 16px;
}

.writingTitle {
  color: palevioletred;
  font-weight: 600;
  font-size: 38px;
  padding-bottom: 25px;
}

.footer {
  height: 5vh;
}

.homeLogoMinds {
  display: none;
  border-bottom-right-radius: 30px;
  border-top-right-radius: 30px;
  border-left: 0px none;
  padding-left: 1rem;
  padding-right: 1rem;
}

.homeLogo {
  display: flex;
  animation: text-focus-in 1s ease-in both;
}

@keyframes text-focus-in {
  0% {
    filter: blur(12px);
    opacity: 0;
  }
  100% {
    filter: blur(0px);
    opacity: 1;
  }
}

/*
Styles for LIKE Button

CSS way of changing the content of a DOM element on hover.
You keep the content empty (in WritingsComponent.js), then with CSS <class>::before you set it to X
and then with <class>:hover::before you set it to Y.
*/
.material-icons-outlined.like::before {
  content: 'favorite_border';
}

.material-icons-outlined.like:hover::before {
  content: 'favorite';
}

.material-icons-outlined.like.likeClicked::before {
  content: 'favorite';
}

.material-icons-outlined.like.likeClicked {
  animation: zoom-and-disappear 1s;
}

@keyframes zoom-and-disappear {
  0% {
    transform: scale(100%);
  }
  50% {
    filter: blur(5px);
    transform: scale(250%);
  }
  100% {
    transform: scale(100%);
    
  }
}
